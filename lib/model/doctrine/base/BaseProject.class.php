<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Project', 'doctrine');

/**
 * BaseProject
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $name
 * @property string $url
 * @property string $header
 * @property Doctrine_Collection $Projects
 * 
 * @method string              getName()     Returns the current record's "name" value
 * @method string              getUrl()      Returns the current record's "url" value
 * @method string              getHeader()   Returns the current record's "header" value
 * @method Doctrine_Collection getProjects() Returns the current record's "Projects" collection
 * @method Project             setName()     Sets the current record's "name" value
 * @method Project             setUrl()      Sets the current record's "url" value
 * @method Project             setHeader()   Sets the current record's "header" value
 * @method Project             setProjects() Sets the current record's "Projects" collection
 * 
 * @package    sf_sandbox
 * @subpackage model
 * @author     Joeri de Bruin
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseProject extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('project');
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('url', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('header', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Banner as Projects', array(
             'local' => 'id',
             'foreign' => 'project_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}